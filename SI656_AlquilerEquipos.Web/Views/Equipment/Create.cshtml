@model SI656_AlquilerEquipos.Web.ViewModel.Equipment.CreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>equipo</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(x => x.Code, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Code, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Description, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Cost, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Cost, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Cost, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.EquipmentStateId, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.EquipmentStateId, new SelectList(Model.StateList, "id", "nombre"), "- Seleccione -", new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(x => x.EquipmentStateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.EquipmentTypeId, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.DropDownListFor(x => x.EquipmentTypeId, new SelectList(Model.StateList, "id", "nombre"), "- Seleccione -", new { @class = "form-control", @required = "required" })
            @Html.ValidationMessageFor(x => x.EquipmentTypeId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Stock, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.Stock, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.Stock, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.PriceByHour, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.PriceByHour, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.PriceByHour, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.PriceByDay, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.PriceByDay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.PriceByDay, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.PriceByWeek, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.PriceByWeek, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.PriceByWeek, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ExtraHour, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.ExtraHour, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.ExtraHour, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ExtraDay, htmlAttributes: new { @class = "control-label col-md-12" })
        <div class="col-md-10">
            @Html.EditorFor(x => x.ExtraDay, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(x => x.ExtraDay, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
